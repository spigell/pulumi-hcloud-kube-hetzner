# This example shows how to create a k3s cluster with wireguard native layer based on private Hetzner network.
# The cluster has 1 control plane node and 2 agent nodepools.
# One of the agent nodepool is labeled as ingress and taints the nodes with NoSchedule.
config:
  pulumi-hcloud-kube-hetzner:network:
    hetzner:
      enabled: true
      # It is highly recommended to set a cidr for the private network for at least /20
      cidr: 10.22.0.0/16
    wireguard:
      enabled: true
  pulumi-hcloud-kube-hetzner:k8s:
    kube-api-endpoint:
      # public|internal|wireguard
      type: wireguard
  pulumi-hcloud-kube-hetzner:nodepools:
    agents:
      - id: 01-big-nodes
        config:
          server:
            server-type: cpx31
        nodes:
        - id: k3s-big-agent01
      - id: 02-ingress-nodes
        config:
          k8s:
            node-label:
            - kubernetes.io/role=ingress
            node-taint:
            - node-role.kubernetes.io/ingress:NoSchedule
          server:
            # There is no need to use a big server for ingress nodes
            # The cpx11 is the minimal for the program
            server-type: cpx11
        nodes:
        - id: k3s-ingress01
    servers:
      - id: 01-control-plane
        config:
          server:
            server-type: cpx21
        nodes:
        - id: k3s-server01
          server:
            location: fsn1
  pulumi-hcloud-kube-hetzner:defaults:
    global:
      k8s:
        node-label:
          - k3os.io/upgrade=disabled
      server:
        firewall:
          hetzner:
            enabled: true
            allow-icmp: true
            ssh:
              allow: true
      k3s:
        version: v1.28.3+k3s2
    servers:
      k3s:
        config:
          disable:
            - metrics-server
            - traefik
            - servicelb
