name: The reusable workflow for deploying clusters
run-name: Cluster ${{ inputs.pulumi-stack }} by @${{ github.actor }}

on:
  workflow_call:
    inputs:
      open-kubeapi-for-public-net:
        required: false
        type: boolean
        default: false
      pulumi-stack:
        required: true
        type: string
      pulumi-config-source:
        required: true
        type: string
      template:
        type: string
        default: go/library
    secrets:
      google-credentials:
        required: true
      hcloud-token:
        required: true
      github-token:
        required: true

jobs:
  deploy:
    name: Deploy Cluster
    runs-on: runs-on,family=c7i+m7,runner=4cpu-linux-x64,run-id=${{ github.run_id }}
    timeout-minutes: 30
    env:
      PULUMI_STACK: ${{ inputs.pulumi-stack }}
      PULUMI_CONFIG_SOURCE: ${{ inputs.pulumi-config-source }}
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/prepare-pulumi
        name: Prepare pulumi environment
        with:
          create-stack: true
          google-credentials: ${{ secrets.google-credentials }}
          template: ${{ inputs.template }}
      - name: Set open kubernetes api in public network
        if: inputs.open-kubeapi-for-public-net
        run: pulumi config set --path 'k8s.kube-api-endpoint.firewall.hetzner-public.allowed-ips[0]' 0.0.0.0/0
        working-directory: test-project
      - uses: actions/upload-artifact@v4
        with:
          name: pulumi-configuration-${{ env.PULUMI_STACK }}
          path: "test-project/Pulumi.${{ env.PULUMI_STACK }}.yaml"
      - name: Preview
        run: pulumi preview -s ${{ env.PULUMI_STACK }} -v=9 --color=always --logtostderr 2> preview.log
        working-directory: test-project
        env:
          HCLOUD_TOKEN: ${{ secrets.hcloud-token }}
          GITHUB_TOKEN: ${{ secrets.github-token }}
      - name: Up
        run: pulumi up --suppress-progress -yf -s ${{ env.PULUMI_STACK }} -v=9 --color=always --logtostderr 2> up.log
        working-directory: test-project
        env:
          HCLOUD_TOKEN: ${{ secrets.hcloud-token }}
          GITHUB_TOKEN: ${{ secrets.github-token }}
      - name: Gather logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: pulumi-logs-${{ env.PULUMI_STACK }}
          path: test-project/*.log
      - name: Gather artifacts from pulumi
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: phkh-artifacts-${{ env.PULUMI_STACK }}
          path: test-project/phkh*

  main-integration-tests:
    needs:
      - deploy
    name: Main Integration Tests
    runs-on: runs-on,family=c7i+m7,runner=4cpu-linux-x64,run-id=${{ github.run_id }}
    timeout-minutes: 30
    env:
      PULUMI_STACK: ${{ inputs.pulumi-stack }}
      PULUMI_CONFIG_SOURCE: ../../${{ inputs.pulumi-config-source }}
      PULUMI_STACK_CONFIG: ../../test-project/Pulumi.${{ inputs.pulumi-stack }}.yaml
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/prepare-pulumi
        name: Prepare pulumi environment
        with:
          create-stack: false
          google-credentials: ${{ secrets.google-credentials }}
          template: ${{ inputs.template }}
      - uses: actions/download-artifact@v4
        with:
          name: pulumi-configuration-${{ env.PULUMI_STACK }}
          path: test-project
      - uses: actions/download-artifact@v4
        with:
          name: phkh-artifacts-${{ env.PULUMI_STACK }}
          path: test-project
      - run: go test -v -timeout=25m -parallel=10 -tags=kubernetes,connectivity
        name: Run main integration tests
        working-directory: internal/integration
        env:
          HCLOUD_TOKEN: ${{ secrets.hcloud-token }}
          GITHUB_TOKEN: ${{ secrets.github-token }}

  cleanup:
    name: Cleanup
    needs:
      - main-integration-tests
    runs-on: runs-on,runner=2cpu-linux-x64,run-id=${{ github.run_id }}
    if: always()
    env:
      PULUMI_STACK: ${{ inputs.pulumi-stack }}
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/prepare-pulumi
        name: Prepare pulumi environment
        with:
          create-stack: false
          google-credentials: ${{ secrets.google-credentials }}
          template: ${{ inputs.template }}
      - uses: actions/download-artifact@v4
        with:
          name: pulumi-configuration-${{ env.PULUMI_STACK }}
          path: test-project
      - name: Cancel previous run (if failed)
        run: pulumi cancel -s ${{ env.PULUMI_STACK }} -y
        working-directory: test-project
        env:
          HCLOUD_TOKEN: ${{ secrets.hcloud-token }}
          GITHUB_TOKEN: ${{ secrets.github-token }}
      - name: Cleanup
        uses: pulumi/actions@v4
        with:
          command: destroy
          stack-name: ${{ env.PULUMI_STACK }}
          remove: true
          cloud-url: gs://spigell-infra-phkh-pulumi-states
          work-dir: test-project
        env:
          HCLOUD_TOKEN: ${{ secrets.hcloud-token }}
          GITHUB_TOKEN: ${{ secrets.github-token }}
